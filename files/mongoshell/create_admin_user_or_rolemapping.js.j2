//
// Mongo Shell script to create or reference (if LDAP/Kerberos) a database
// administrator (also mapping roles to LDAP group names if using LDAP authz)
//

{% if client_auth_method == 'userpwd' %}
// Creating local database user for SCRAM-SHA-1 user access
db.getSiblingDB("admin").createUser(
    {
      user : "{{ db_adminuser_name }}",
      pwd  : "{{ db_adminuser_password }}",
      roles: [ { role: "root", db: "admin" } ]
    }
 );
{% elif client_auth_method == 'cert' %}
// Creating external authentication reference for certficate user accss
db.getSiblingDB("$external").createUser(
    {
      user : "CN={{ db_adminuser_name }}{{ client_dn_suffix }}",
      roles: [ { role: "root", db: "admin" } ]
    }
 );
{% elif client_auth_method == 'ldap' and ldap_integration == 'direct' and role_membership == 'external' %}
// Creating external authentication reference for LDAP user access with external LDAP group/role mappings
// (if using native LDAP integration with external authorization, need to authenticate and then create role names that match external LDAP groups)
db.getSiblingDB("$external").auth(
    {
         mechanism: "PLAIN",
         user: "{{ db_adminuser_name }}",
         pwd:  "{{ db_adminuser_password }}",
         digestPassword: false
    }
 );
db.getSiblingDB("admin").createRole(
    { 
        role: "cn=DBAdmin,ou=Groups,dc={{ org_name }},dc={{ org_type }}", 
        privileges: [], 
        roles: ["root"] 
    }
); 
{% elif client_auth_method == 'ldap' %}
// Creating external authentication reference for LDAP proxy or direct user access, and role mappings managed internally
db.getSiblingDB("$external").createUser(
    {
      user : "{{ db_adminuser_name }}",
      roles: [ { role: "root", db: "admin" } ]
    }
 );
{% elif client_auth_method == 'kerberos' %}
// Creating external authentication reference fer Kerberos user access
db.getSiblingDB("$external").createUser(
    {
      user : "{{ db_adminuser_name }}@{{ org_name|upper }}.{{ org_type|upper }}",
      roles: [ { role: "root", db: "admin" } ]
    }
 );
{% else %}
// Nothing to do as authentication is not enabled in MongoDB
{% endif %}

